[{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/articles/create_FTM.html","id":"create-ftm-objects","dir":"Articles","previous_headings":"","what":"Create FTM objects","title":"Create FTM object","text":"FTM object can created lm, glm, glmnet models using createFTM function. wrapper passes model specific functions e.g. createFromLm create FTM object lm object. functions can called directly, return error pass model supported.","code":""},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/articles/create_FTM.html","id":"create-ftm-object-from-linear-model","dir":"Articles","previous_headings":"Create FTM objects","what":"Create FTM object from linear model","title":"Create FTM object","text":", create linear model (using lm), convert FTM object.","code":"# Load the mtcars dataset data(mtcars)  # Fit a linear model to the mtcars dataset, predicting mpg from cyl, hp, and wt lm_model <- lm(mpg ~ cyl + hp + wt, data = mtcars)  # Create FTM object using createFTM ftmlm_model <- createFTM(lm_model) # same as using createFromLm  # A quick look at the model (shows a ftmlm model) show(ftmlm_model) #> Flexible Transfer Model - Linear Model #> ------------------------------------------------------ #>   Number of predictors: 3 #>  #> Formula: #> mpg ~ `(Intercept)` + cyl + hp + wt #>  #> Coefficients: #> (Intercept)          cyl           hp           wt   #>      38.752       -0.942       -0.018       -3.167"},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/articles/create_FTM.html","id":"create-ftm-object-from-a-generalized-linear-model","dir":"Articles","previous_headings":"Create FTM objects","what":"Create FTM object from a generalized linear model","title":"Create FTM object","text":"Just like creating FTM object linear model, can create FTM objects generalized linear model (binomial family).","code":"# Create a logistic model using the mtcars dataset glm_model <- glm(am ~ hp + wt + cyl, data = mtcars, family = \"binomial\")  # Create FTM object using createFTM ftmglm_model <- createFTM(glm_model)  # A quick look at the model (shows a ftmglm model) show(ftmglm_model) #> Flexible Transfer Model - Generalized Linear Model #> ------------------------------------------------------ #>   Number of predictors: 3 #>  #> Formula: #> am ~ `(Intercept)` + hp + wt + cyl #>  #> Coefficients: #> (Intercept)           hp           wt          cyl   #>     19.7029       0.0326      -9.1495       0.4876"},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/articles/create_FTM.html","id":"create-ftm-object-from-glmnet-model-both-linear-and-binomial-models","dir":"Articles","previous_headings":"Create FTM objects","what":"Create FTM object from glmnet model (both linear and binomial models)","title":"Create FTM object","text":"Creating FTM object glmnet model just easy. However, due way glmnet models stored, need manually pass predictor outcome data. recommended use cv.glmnet order get optimal lambda (default, lambda.min used).","code":"# glmnet requires input data to be in matrices predictors <- as.matrix(mtcars[, c(\"hp\", \"wt\", \"cyl\")])  # Fitting a cv.glmnet to the mtcars dataset glmnet_model <- glmnet::cv.glmnet(predictors, mtcars$am, family = \"binomial\", alpha = 0)  # Create FTM object using createFTM ftmglmnet_model <- createFTM(glmnet_model, x = predictors, y = mtcars$am)  # A quick look at the model (shows a ftmglm model) show(ftmglmnet_model) #> Flexible Transfer Model - Generalized Linear Model #> ------------------------------------------------------ #>   Number of predictors: 3 #>  #> Formula: #> am ~ `(Intercept)` + hp + wt + cyl #>  #> Coefficients: #> (Intercept)           hp           wt          cyl   #>      6.2245       0.0116      -2.0526      -0.3230  # We can also fit a linear model using glmnet glmnet_model <- glmnet::cv.glmnet(predictors, mtcars$mpg, family = \"gaussian\", alpha = 0)  # Create FTM object using createFTM ftmglmnet_model <- createFTM(glmnet_model, x = predictors, y = mtcars$mpg)  # A quick look at the model (shows a ftmlm model) show(ftmglmnet_model) #> Flexible Transfer Model - Linear Model #> ------------------------------------------------------ #>   Number of predictors: 3 #>   Optimal lambda: 0.514698 #>  #> Formula: #> mpg ~ `(Intercept)` + hp + wt + cyl #>  #> Coefficients: #> (Intercept)           hp           wt          cyl   #>     35.2179      -0.0191      -2.0949      -0.9021"},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/articles/extract_coefficient.html","id":"extract-beta-coefficient-from-ftm-object","dir":"Articles","previous_headings":"","what":"Extract beta coefficient from FTM object","title":"Extracting coefficients","text":"FTM objects allow view beta coefficients variables subset variables. coef function can used extract coefficients fitted FTM object. select argument can used extract coefficients specific variables (accepts variable names integers).","code":"# Assuming ftmglm_model, ftmlm_model or ftmglmnet_model are pre-fitted model objects (see Create FTM Object vignette)  # Extract beta coefficients for all variables from a ftmlm model coef(ftmlm_model) #> (Intercept)         cyl          hp          wt  #>  38.7517874  -0.9416168  -0.0180381  -3.1669731  # Extract beta coefficients for a reweighted model using a subset of variables from a ftmlm model coef(ftmlm_model, select = c(\"cyl\", \"hp\")) #> (Intercept)         cyl          hp  #>  36.9083305  -2.2646936  -0.0191217    # This works similarly for a ftmglm model coef(ftmglm_model) #> (Intercept)          hp          wt         cyl  #> 19.70288279  0.03259168 -9.14947127  0.48759798  # Similarly, you can extract beta coefficients after reweighting for a subset of variables from a ftmglm model coef(ftmglm_model, select = c(\"cyl\", \"hp\")) #> (Intercept)         cyl          hp  #>  3.51747179 -1.05168913  0.01824552    # This also works for FTM objects made from glmnet models coef(ftmglmnet_model) #>   (Intercept)            hp            wt           cyl  #>  1.166828e+01  1.943383e-02 -4.860874e+00  1.032507e-12  # Finally, you can extract beta coefficients after reweighting for a subset of variables from a ftmglmnet model coef(ftmglmnet_model, select = c(\"cyl\", \"hp\")) #> (Intercept)         cyl          hp  #>  3.51627932 -1.04395036  0.01724091"},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/articles/extract_coefficient.html","id":"manually-subset-of-ftm-object","dir":"Articles","previous_headings":"","what":"Manually subset of FTM object","title":"Extracting coefficients","text":"Although FTM object contains information variables, possible manually trim FTM model subset variables.","code":"# Assuming ftmglm_model, ftmlm_model or ftmglmnet_model are pre-fitted model objects (see Create FTM Object vignette)  # Subset a ftmlm model, so it only contains a subset of variables subset(ftmlm_model, subset = c(\"cyl\", \"hp\")) #> Flexible Transfer Model - Linear Model #> ------------------------------------------------------ #>   Number of predictors: 2 #>  #> Formula: #> mpg ~ `(Intercept)` + cyl + hp #>  #> Coefficients: #> (Intercept)          cyl           hp   #>     36.9083      -2.2647      -0.0191    # Similarly, you can subset a ftmglm model subset(ftmglm_model, subset = c(\"cyl\", \"hp\")) #> Flexible Transfer Model - Generalized Linear Model #> ------------------------------------------------------ #>   Number of predictors: 2 #>  #> Formula: #> am ~ `(Intercept)` + hp + cyl #>  #> Coefficients: #> (Intercept)           hp          cyl   #>      3.5175       0.0182      -1.0517    # This also works for FTM objects made from glmnet models subset(ftmglmnet_model, subset = c(\"cyl\", \"hp\")) #> Flexible Transfer Model - Generalized Linear Model #> ------------------------------------------------------ #>   Number of predictors: 2 #>  #> Formula: #> am ~ `(Intercept)` + hp + cyl #>  #> Coefficients: #> (Intercept)           hp          cyl   #>      3.5163       0.0172      -1.0440"},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/articles/install_load.html","id":"installing-and-loading-the-package","dir":"Articles","previous_headings":"","what":"Installing and loading the package","title":"Install and load FTM","text":"FTM package can installed Github using code . Note ’ll need install glmnet package, haven’t already. Load package.","code":"if (!require(\"devtools\")) install.packages(\"devtools\") if (!require(\"glmnet\")) install.packages(\"glmnet\") devtools::install_github(\"BakerMetabolomics/FlexibleTransferModels\", build_vignettes = TRUE) library(FTM)"},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/articles/predicting_in_newdata.html","id":"using-ftm-objects-to-predict-outcomes-in-new-datasets","dir":"Articles","previous_headings":"","what":"Using FTM objects to predict outcomes in new datasets","title":"Predicting in new datasets","text":"FTM objects allow prediction outcomes using predict function, just like original model.","code":"# Create a \"new\" data new_data <- mtcars[1:10, c(\"hp\", \"wt\", \"cyl\")]  # predict using the FTM from lm model predict(ftmlm_model, newdata = new_data) #>                        mpg #> Mazda RX4         22.82043 #> Mazda RX4 Wag     22.01285 #> Datsun 710        25.96040 #> Hornet 4 Drive    20.93608 #> Hornet Sportabout 17.16780 #> Valiant           20.25036 #> Duster 360        15.49342 #> Merc 240D         23.76431 #> Merc 230          23.29574 #> Merc 280          19.98901  # predict using the FTM from glm model predict(ftmglm_model, newdata = new_data) #>                            am #> Mazda RX4          2.24194025 #> Mazda RX4 Wag     -0.09117492 #> Datsun 710         3.45752720 #> Hornet 4 Drive    -3.20199515 #> Hornet Sportabout -2.16697131 #> Valiant           -5.60657399 #> Duster 360        -1.07498527 #> Merc 240D         -5.51285476 #> Merc 230          -4.07135061 #> Merc 280          -4.83693440  # predict using the FTM from glmnet model predict(ftmglmnet_model, newdata = new_data) #>                           am #> Mazda RX4          1.0705100 #> Mazda RX4 Wag     -0.1690128 #> Datsun 710         2.1983970 #> Hornet 4 Drive    -1.8217099 #> Hornet Sportabout -1.6522074 #> Valiant           -3.1097932 #> Duster 360        -0.9237527 #> Merc 240D         -2.6330120 #> Merc 230          -1.7972606 #> Merc 280          -2.6627667"},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/articles/predicting_in_newdata.html","id":"ftm-objects-allow-predictions-even-with-missing-variables","dir":"Articles","previous_headings":"","what":"FTM objects allow predictions even with missing variables","title":"Predicting in new datasets","text":"major benefit FTM objects allow predictions even new dataset missing variables. flexible structure FTM achieved reweighting beta coefficients.","code":"# Create a \"new\" data with missing variables (missing \"cyl\") new_data <- mtcars[1:10, c(\"hp\", \"wt\")]  # predict using the FTM from lm model predict(ftmlm_model, newdata = new_data) #>                        mpg #> Mazda RX4         23.57233 #> Mazda RX4 Wag     22.58348 #> Datsun 710        25.27582 #> Hornet 4 Drive    21.26502 #> Hornet Sportabout 18.32727 #> Valiant           20.47382 #> Duster 360        15.59904 #> Merc 240D         22.88707 #> Merc 230          21.99367 #> Merc 280          19.97946  # predict using the FTM from glm model predict(ftmglm_model, newdata = new_data) #>                           am #> Mazda RX4          1.6494977 #> Mazda RX4 Wag     -0.3693964 #> Datsun 710         3.4227907 #> Hornet 4 Drive    -3.0612551 #> Hornet Sportabout -2.5413401 #> Valiant           -5.1779994 #> Duster 360        -1.0922657 #> Merc 240D         -4.5627401 #> Merc 230          -3.0777025 #> Merc 280          -4.3823738  # predict using the FTM from glmnet model predict(ftmglmnet_model, newdata = new_data) #>                           am #> Mazda RX4          1.0705100 #> Mazda RX4 Wag     -0.1690128 #> Datsun 710         2.1983970 #> Hornet 4 Drive    -1.8217099 #> Hornet Sportabout -1.6522074 #> Valiant           -3.1097932 #> Duster 360        -0.9237527 #> Merc 240D         -2.6330120 #> Merc 230          -1.7972606 #> Merc 280          -2.6627667"},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/articles/reason_to_use_FTM.html","id":"overview-of-ftm","dir":"Articles","previous_headings":"","what":"Overview of FTM","title":"Reason to use FTM","text":"Often, ’omics data, model trained one dataset want apply another dataset. However, predictors new dataset may entirely predictors original dataset. causes issue, can traditionally solved 2 options: Ignore missing predictors (effectively setting 0) Recreate model using subset variables present datasets FTM overcomes challenge allowing model evaluated datasets without exact overlap predictor variables, without loss generalisability, re-optimization, access individual-level data. achieved storing intermediate matrices allow beta coefficients recalculated using subset original predictors.","code":""},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Corey Giles. Author, maintainer. Changyu Yi. Author.","code":""},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Giles C, Yi C (2025). FTM: Flexible Transfer Models. R package version 0.1.1, https://bakermetabolomics.github.io/FlexibleTransferModels/.","code":"@Manual{,   title = {FTM: Flexible Transfer Models},   author = {Corey Giles and Changyu Yi},   year = {2025},   note = {R package version 0.1.1},   url = {https://bakermetabolomics.github.io/FlexibleTransferModels/}, }"},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/index.html","id":"overview-of-the-ftm-package","dir":"","previous_headings":"","what":"Overview of the FTM package","title":"Flexible Transfer Models","text":"Often, ’omics data, model trained one dataset want apply another dataset. However, predictors new dataset may entirely predictors original dataset. causes issue, can traditionally solved 2 options: Ignore missing predictors (effectively setting 0) Recreate model using subset variables present datasets FTM overcomes challenge allowing model evaluated datasets without exact overlap predictor variables, without loss generalisability, re-optimization, access individual-level data. achieved storing intermediate matrices allow beta coefficients recalculated using subset original predictors.","code":""},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Flexible Transfer Models","text":"can install development version FTM GitHub : Load package. ’ll need glmnet installed use FTM package.","code":"if (!require(\"devtools\")) install.packages(\"devtools\") if (!require(\"glmnet\")) install.packages(\"glmnet\") devtools::install_github(\"BakerMetabolomics/FlexibleTransferModels\", build_vignettes = TRUE) library(FTM)"},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Flexible Transfer Models","text":"basic example shows convert existing model FTM object predict outcomes new dataset:","code":"# Set up the predictors (glmnet requires a matrix) predictors <- as.matrix(mtcars[, c(\"hp\", \"wt\", \"cyl\")])  # 1. Fitting a glmnet model to the mtcars dataset glmnet_model <- glmnet::cv.glmnet(predictors, mtcars$am, family = \"binomial\", alpha = 0)  # 2. Create FTM object using createFTM ftmglmnet_model <- createFTM(glmnet_model, x = predictors, y = mtcars$am)  # A quick look at the model show(ftmglmnet_model) #> Flexible Transfer Model - Generalized Linear Model #> ------------------------------------------------------ #>   Number of predictors: 3 #>  #> Formula: #> am ~ `(Intercept)` + hp + wt + cyl #>  #> Coefficients: #> (Intercept)           hp           wt          cyl   #>      6.2245       0.0116      -2.0526      -0.3230  # Extract the beta coefficients from a FTM object coef(ftmglmnet_model) #> (Intercept)          hp          wt         cyl  #>  6.22451499  0.01164029 -2.05263254 -0.32296485   # 3. Predict on \"new\" data new_data <- mtcars[1:10, c(\"hp\", \"wt\", \"cyl\")]  # Predict using the FTM from glmnet model predictions <- predict(ftmglmnet_model, newdata = new_data, type = \"response\") predictions #>                          am #> Mazda RX4         0.5471743 #> Mazda RX4 Wag     0.4172285 #> Datsun 710        0.7778351 #> Hornet 4 Drive    0.2626857 #> Hornet Sportabout 0.2004940 #> Valiant           0.1689408 #> Duster 360        0.3025400 #> Merc 240D         0.2903789 #> Merc 230          0.3947689 #> Merc 280          0.2070870  # 4. Predict on \"new\" data that has missing predictors new_data_missing <- mtcars[1:10, c(\"hp\", \"wt\")] # missing cyl  # Predict using the FTM from glmnet model predictions_missing <- predict(ftmglmnet_model, newdata = new_data_missing, type = \"response\") predictions_missing #>                          am #> Mazda RX4         0.6216695 #> Mazda RX4 Wag     0.4695754 #> Datsun 710        0.7498350 #> Hornet 4 Drive    0.2795889 #> Hornet Sportabout 0.2672955 #> Valiant           0.1710853 #> Duster 360        0.3094615 #> Merc 240D         0.2238860 #> Merc 230          0.2889472 #> Merc 280          0.1985376"},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Flexible Transfer Models","text":"detailed information advanced usage, please refer package vignettes available within R:","code":"browseVignettes(\"FTM\")"},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Flexible Transfer Models","text":"Contributions FTM package welcome community. Bug reports, documentation enhancements, feature requests can filed GitHub issues page.","code":""},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/index.html","id":"contact","dir":"","previous_headings":"","what":"Contact","title":"Flexible Transfer Models","text":"inquiries, please contact: Corey Giles: Corey.Giles@Baker.edu.au Changyu Yi: Joe.Yi@Baker.edu.au","code":""},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/index.html","id":"version-history","dir":"","previous_headings":"","what":"Version History","title":"Flexible Transfer Models","text":"detailed list changes, improvements, bug fixes, please refer NEWS.md file.","code":""},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/coef-ftmglm-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Model Coefficients from a ftmglm or ftmlm object — coef,ftmglm-method","title":"Extract Model Coefficients from a ftmglm or ftmlm object — coef,ftmglm-method","text":"Extracts beta coefficients ftmglm ftmlm model. Allows coefficients estimated using given set variables.","code":""},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/coef-ftmglm-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Model Coefficients from a ftmglm or ftmlm object — coef,ftmglm-method","text":"","code":"# S4 method for class 'ftmglm' coef(object, select = NULL)  # S4 method for class 'ftmlm' coef(object, select = NULL, s = NULL)"},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/coef-ftmglm-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Model Coefficients from a ftmglm or ftmlm object — coef,ftmglm-method","text":"object Object class inheriting ftmglm ftmlm. select (optional) character string variables indices use. omitted, coefficients variables returned. s (optional) Ridge penalty apply reweighting. Default 0, indicating penalty.","code":""},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/coef-ftmglm-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Model Coefficients from a ftmglm or ftmlm object — coef,ftmglm-method","text":"named numeric vector coefficients.","code":""},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/coef-ftmglm-method.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract Model Coefficients from a ftmglm or ftmlm object — coef,ftmglm-method","text":"select specified, coefficients selected variables calculated. ridge penalty parameter s applicable ftmlm models.","code":""},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/coef-ftmglm-method.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Extract Model Coefficients from a ftmglm or ftmlm object — coef,ftmglm-method","text":"use ridge penalty applicable ftmglm models ignored specified.","code":""},{"path":[]},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/coef-ftmglm-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Model Coefficients from a ftmglm or ftmlm object — coef,ftmglm-method","text":"","code":"if (FALSE) { # \\dontrun{ # Assuming ftmglmModel and ftmlmModel are pre-fitted model objects # Extract all coefficients from a ftmglm model coeffs_glm <- coef(ftmglmModel)  # Extract coefficients for specific variables from a ftmglm model coeffs_glm_select <- coef(ftmglmModel, select = c(\"var1\", \"var2\"))  # Extract all coefficients from a ftmlm model with a ridge penalty coeffs_lm <- coef(ftmlmModel, s = 0.1)  # Extract coefficients for specific variables from a ftmlm model with no penalty coeffs_lm_select <- coef(ftmlmModel, select = c(\"var1\", \"var2\")) } # }"},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/createFTM.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Flexible Transfer Model (FTM) Object from Different Model Types — createFTM","title":"Create a Flexible Transfer Model (FTM) Object from Different Model Types — createFTM","text":"wrapper function creates FTM object various types model objects, including glm, glmnet, lm, extracting necessary components adapting FTM framework.","code":""},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/createFTM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Flexible Transfer Model (FTM) Object from Different Model Types — createFTM","text":"","code":"createFTM(modelObj, s = NULL, x = NULL, y = NULL, outcome_name = NULL)"},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/createFTM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Flexible Transfer Model (FTM) Object from Different Model Types — createFTM","text":"modelObj model object glm, glmnet, lm. s Optional value penalty parameter (lambda); applicable glmnet lm models. x matrix predictors used glmnet model. y vector outcomes used glmnet model. outcome_name Optional name outcome variable; provided, extracted model object.","code":""},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/createFTM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Flexible Transfer Model (FTM) Object from Different Model Types — createFTM","text":"FTM object either type ftmglm ftmlm depending input model.","code":""},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/createFTM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Flexible Transfer Model (FTM) Object from Different Model Types — createFTM","text":"","code":"if (FALSE) { # \\dontrun{ data(mtcars) lm_model <- lm(mpg ~ cyl + hp + wt, data = mtcars) ftm_object <- createFTM(lm_model)  glm_model <- glm(am ~ hp + wt + cyl, data = mtcars, family = \"binomial\") ftm_object <- createFTM(glm_model)  predictors <- as.matrix(mtcars[, c(\"hp\", \"wt\", \"cyl\")]) glmnet_model <- glmnet::cv.glmnet(predictors, mtcars$am, family = \"binomial\") ftm_object <- createFTM(glmnet_model) } # }"},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/createFromGlm.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Flexible Transfer Model (ftmglm or ftmlm) from a glm object — createFromGlm","title":"Create a Flexible Transfer Model (ftmglm or ftmlm) from a glm object — createFromGlm","text":"function extracts necessary components glm object create ftmglm object. extracts necessary components adapts FTM framework.","code":""},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/createFromGlm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Flexible Transfer Model (ftmglm or ftmlm) from a glm object — createFromGlm","text":"","code":"createFromGlm(glmObj, outcome_name = NULL)"},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/createFromGlm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Flexible Transfer Model (ftmglm or ftmlm) from a glm object — createFromGlm","text":"glmObj glm object stats package outcome_name Optional name outcome variable; provided, extracted model object.","code":""},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/createFromGlm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Flexible Transfer Model (ftmglm or ftmlm) from a glm object — createFromGlm","text":"ftmglm object.","code":""},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/createFromGlm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Flexible Transfer Model (ftmglm or ftmlm) from a glm object — createFromGlm","text":"","code":"if (FALSE) { # \\dontrun{ # Fitting a glm to the mtcars dataset data(mtcars) glm_model <- glm(am ~ hp + wt + cyl, data = mtcars, family = \"binomial\") ftmglm_model <- createFromGlm(glm_model) } # }"},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/createFromGlmnet.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Flexible Transfer Model (ftmglm or ftmlm) from a glmnet object — createFromGlmnet","title":"Create a Flexible Transfer Model (ftmglm or ftmlm) from a glmnet object — createFromGlmnet","text":"function extracts necessary components glmnet object (either cv.glmnet glmnet) create ftmglm object. uses optimal, specified, penalty parameter (lambda) data used glmnet model adapt FTM framework.","code":""},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/createFromGlmnet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Flexible Transfer Model (ftmglm or ftmlm) from a glmnet object — createFromGlmnet","text":"","code":"createFromGlmnet(glmnetObj, s = NULL, x = NULL, y = NULL, outcome_name = NULL)"},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/createFromGlmnet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Flexible Transfer Model (ftmglm or ftmlm) from a glmnet object — createFromGlmnet","text":"glmnetObj cv.glmnet glmnet object glmnet package s value penalty parameter (lambda) use; default cv.glmnet lambda.min x matrix predictors used glmnet model y vector outcomes used glmnet model outcome_name Optional name outcome variable; provided, extracted model object.","code":""},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/createFromGlmnet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Flexible Transfer Model (ftmglm or ftmlm) from a glmnet object — createFromGlmnet","text":"ftmglm ftmlm object.","code":""},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/createFromGlmnet.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create a Flexible Transfer Model (ftmglm or ftmlm) from a glmnet object — createFromGlmnet","text":"data used glmnet model must available global environment.","code":""},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/createFromGlmnet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Flexible Transfer Model (ftmglm or ftmlm) from a glmnet object — createFromGlmnet","text":"","code":"if (FALSE) { # \\dontrun{ # Fitting a glmnet model to the mtcars dataset data(mtcars) predictors <- as.matrix(mtcars[, c(\"hp\", \"wt\", \"cyl\")]) glmnet_model <- glmnet::cv.glmnet(predictors, mtcars$am, family = \"binomial\", alpha = 0) ftmglm_model <- createFromGlmnet(glmnet_model, x = predictors, y = mtcars$am) } # }"},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/createFromLm.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Flexible Transfer Model (ftmlm) from a lm object — createFromLm","title":"Create a Flexible Transfer Model (ftmlm) from a lm object — createFromLm","text":"function extracts necessary components lm object create ftmlm object. extracts necessary components adapts FTM framework.","code":""},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/createFromLm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Flexible Transfer Model (ftmlm) from a lm object — createFromLm","text":"","code":"createFromLm(lmObj, outcome_name = NULL)"},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/createFromLm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Flexible Transfer Model (ftmlm) from a lm object — createFromLm","text":"lmObj lm object stats package outcome_name Optional name outcome variable; provided, extracted model object.","code":""},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/createFromLm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Flexible Transfer Model (ftmlm) from a lm object — createFromLm","text":"ftmlm object.","code":""},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/createFromLm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Flexible Transfer Model (ftmlm) from a lm object — createFromLm","text":"","code":"if (FALSE) { # \\dontrun{ # Fitting a linear model to the mtcars dataset data(mtcars) lm_model <- lm(mpg ~ cyl + hp + wt, data = mtcars) ftmlm_model <- createFromLm(lm_model) } # }"},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/formula-ftmglm-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Model Formula for ftmglm or ftmlm objects — formula,ftmglm-method","title":"Model Formula for ftmglm or ftmlm objects — formula,ftmglm-method","text":"Retrieves formula used create ftmglm ftmlm model","code":""},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/formula-ftmglm-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model Formula for ftmglm or ftmlm objects — formula,ftmglm-method","text":"","code":"# S4 method for class 'ftmglm' formula(x)  # S4 method for class 'ftmlm' formula(x)"},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/formula-ftmglm-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model Formula for ftmglm or ftmlm objects — formula,ftmglm-method","text":"x Object class inheriting ftmglm ftmlm.","code":""},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/formula-ftmglm-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Model Formula for ftmglm or ftmlm objects — formula,ftmglm-method","text":"object class 'formula'","code":""},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/formula-ftmglm-method.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Model Formula for ftmglm or ftmlm objects — formula,ftmglm-method","text":"ftmglm ftmlm object created cv.glmnet object, outcome variable named \"y\", rather original name.","code":""},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/ftmglm-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Flexible Transfer Model (FTM) Generalized Linear Model Class — ftmglm-class","title":"Flexible Transfer Model (FTM) Generalized Linear Model Class — ftmglm-class","text":"S4 class designed encapsulate necessary components flexible transfer model generalized linear model. class stores matrices represent weighted cross-product predictors cross-product predictors outcomes, essential model calculations.","code":""},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/ftmglm-class.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flexible Transfer Model (FTM) Generalized Linear Model Class — ftmglm-class","text":"class internally used functions within package perform regression analysis. intended direct use.","code":""},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/ftmglm-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Flexible Transfer Model (FTM) Generalized Linear Model Class — ftmglm-class","text":"XtWX matrix representing weighted cross product predictor variables. XtWz matrix representing weighted cross product predictor variables outcomes.","code":""},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/ftmglm.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for ftmglm Objects — ftmglm","title":"Constructor for ftmglm Objects — ftmglm","text":"Creates instance ftmglm class, initializing specific matrices necessary flexible transfer model calculations. function typically called internally within higher-level functions prepare data perform model fitting.","code":""},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/ftmglm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for ftmglm Objects — ftmglm","text":"","code":"ftmglm(XtWX, XtWz)"},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/ftmglm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for ftmglm Objects — ftmglm","text":"XtWX numeric matrix representing weighted cross product predictors. XtWz numeric matrix representing weighted cross product predictors outcomes.","code":""},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/ftmglm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for ftmglm Objects — ftmglm","text":"object class ftmglm.","code":""},{"path":[]},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/ftmglm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Constructor for ftmglm Objects — ftmglm","text":"","code":"if (FALSE) { # \\dontrun{   XtWX <- matrix(rnorm(100), 10, 10)   XtWz <- matrix(rnorm(10), 10, 1)   model <- ftmglm(XtWX, XtWz) } # }"},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/ftmlm-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Flexible Transfer Model (FTM) Linear Model Class — ftmlm-class","title":"Flexible Transfer Model (FTM) Linear Model Class — ftmlm-class","text":"S4 class designed encapsulate necessary components flexible transfer model linear model. class stores matrices represent weighted cross-product predictors cross-product predictors outcomes, essential model calculations.","code":""},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/ftmlm-class.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flexible Transfer Model (FTM) Linear Model Class — ftmlm-class","text":"class internally used functions within package perform regression analysis. intended direct use.","code":""},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/ftmlm-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Flexible Transfer Model (FTM) Linear Model Class — ftmlm-class","text":"XtX matrix representing cross product predictor variables. Xty matrix representing cross product predictor variables outcomes. s numeric representing optimal Ridge penalty cross-validation (available).","code":""},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/ftmlm.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for ftmlm Objects — ftmlm","title":"Constructor for ftmlm Objects — ftmlm","text":"Creates instance ftmlm class, initializing specific matrices necessary flexible transfer model calculations. function typically called internally within higher-level functions prepare data perform model fitting.","code":""},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/ftmlm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for ftmlm Objects — ftmlm","text":"","code":"ftmlm(XtX, Xty, s = NULL)"},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/ftmlm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for ftmlm Objects — ftmlm","text":"XtX numeric matrix representing cross product predictors. Xty numeric matrix representing cross product predictors outcomes. s numeric value representing optimal Ridge penalty cross-validation (available).","code":""},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/ftmlm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for ftmlm Objects — ftmlm","text":"object class ftmlm.","code":""},{"path":[]},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/ftmlm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Constructor for ftmlm Objects — ftmlm","text":"","code":"if (FALSE) { # \\dontrun{   XtX <- matrix(rnorm(100), 10, 10)   Xty <- matrix(rnorm(10), 10, 1)   model <- ftmlm(XtX, Xty) } # }"},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/predict-ftmglm-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict Method for Flexible Transfer Models (ftmglm and ftmlm) — predict,ftmglm-method","title":"Predict Method for Flexible Transfer Models (ftmglm and ftmlm) — predict,ftmglm-method","text":"Generates predictions ftmglm ftmlm object based new input data. method utilizes intersecting variables model's predictors new dataset.","code":""},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/predict-ftmglm-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict Method for Flexible Transfer Models (ftmglm and ftmlm) — predict,ftmglm-method","text":"","code":"# S4 method for class 'ftmglm' predict(object, newdata, type = c(\"link\", \"response\"))  # S4 method for class 'ftmlm' predict(object, newdata, s = 0)"},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/predict-ftmglm-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict Method for Flexible Transfer Models (ftmglm and ftmlm) — predict,ftmglm-method","text":"object Object class inheriting ftmglm ftmlm. newdata Data frame new data prediction. Must contain least predictors used model training. type character string specifying type prediction: either \"response\" predicted probabilities, \"link\" (default) linear predictors. s Ridge penalty apply flexible reweighting. Default stored optimal penalty, 0 missing.","code":""},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/predict-ftmglm-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict Method for Flexible Transfer Models (ftmglm and ftmlm) — predict,ftmglm-method","text":"numeric vector predictions. type \"link\", linear predictors; \"response\", probabilities, transformed via logistic function.","code":""},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/predict-ftmglm-method.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Predict Method for Flexible Transfer Models (ftmglm and ftmlm) — predict,ftmglm-method","text":"predict method works : Identifying variables common model new data. Preparing data subsetting intersecting variables including intercept. Inverting XtWX XtX matrix, including ridge penalty using truncated SVD handle   potentially singular matrices. Estimating coefficients calculating predictions based specified type. crucial newdata contains variables intersect model's predictors. intersecting variables found, function throws error.","code":""},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/predict-ftmglm-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict Method for Flexible Transfer Models (ftmglm and ftmlm) — predict,ftmglm-method","text":"","code":"if (FALSE) { # \\dontrun{ # Load mtcars dataset data(mtcars)  # Fit a glmnet model fit <- glmnet::cv.glmnet(as.matrix(mtcars[, c(\"hp\", \"wt\", \"cyl\")]), mtcars$am, family = \"binomial\")  # Create an ftmglm object ftmglm_model <- createFromGlmnet(fit, as.matrix(mtcars[, c(\"hp\", \"wt\", \"cyl\")]))  # Predict on \"new\" data new_data <- mtcars[1:10, c(\"hp\", \"wt\", \"cyl\")] predictions <- predict(ftmglm_model, newdata = new_data) print(predictions)  # Fit a linear model lm_model <- lm(mpg ~ cyl + hp + wt, data = mtcars)  # Create an ftmlm object ftmlm_model <- createFromLm(lm_model)  # Predict on \"new\" data new_data <- mtcars[1:10, c(\"hp\", \"wt\", \"cyl\")] predictions <- predict(ftmlm_model, newdata = new_data) print(predictions) } # }"},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/show-ftmglm-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Show Method for ftmglm or ftmlm objects — show,ftmglm-method","title":"Show Method for ftmglm or ftmlm objects — show,ftmglm-method","text":"method formats prints key statistics information ftmglm ftmlm object, including number predictors used model, formula, subset model's coefficients. many coefficients, first 10 displayed followed ellipsis indicate truncation. method enhances readability quick assessment model without cluttering output, particularly useful complex models many predictors parameters.","code":""},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/show-ftmglm-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show Method for ftmglm or ftmlm objects — show,ftmglm-method","text":"","code":"# S4 method for class 'ftmglm' show(object)  # S4 method for class 'ftmlm' show(object)"},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/show-ftmglm-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show Method for ftmglm or ftmlm objects — show,ftmglm-method","text":"object Object class inheriting ftmglm ftmlm.","code":""},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/show-ftmglm-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show Method for ftmglm or ftmlm objects — show,ftmglm-method","text":"method return value; used side effect printing console.","code":""},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/show-ftmglm-method.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Show Method for ftmglm or ftmlm objects — show,ftmglm-method","text":"output includes: Model Type: Identifies model type model. Number Predictors: Displays number predictors used model, counting intercept. Formula: Shows formula used create model, derived `formula` method ftmglm ftmlm objects. Coefficients: Lists model's coefficients. model 10 coefficients, first 10 displayed     followed \"...\" indicate coefficients available shown. Coefficients formatted three decimal places clarity. method useful quick checks summaries model's parameters settings without needing invoke separate summary methods.","code":""},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/show-ftmglm-method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show Method for ftmglm or ftmlm objects — show,ftmglm-method","text":"","code":"if (FALSE) { # \\dontrun{ data(mtcars) fit <- glmnet::cv.glmnet(as.matrix(mtcars[, c(\"hp\", \"wt\", \"cyl\")]), mtcars$am, family = \"binomial\") model <- createFromGlmnet(fit, as.matrix(mtcars[, c(\"hp\", \"wt\", \"cyl\")])) print(model)  # This will invoke the custom 'show' method } # }"},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/subset-ftmglm-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract/Subset the variables used in a ftmglm or ftmlm object — subset,ftmglm-method","title":"Extract/Subset the variables used in a ftmglm or ftmlm object — subset,ftmglm-method","text":"Allows subsetting ftmglm ftmlm objects order restrict model use specified variables.","code":""},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/subset-ftmglm-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract/Subset the variables used in a ftmglm or ftmlm object — subset,ftmglm-method","text":"","code":"# S4 method for class 'ftmglm' subset(x, subset)  # S4 method for class 'ftmlm' subset(x, subset)"},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/subset-ftmglm-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract/Subset the variables used in a ftmglm or ftmlm object — subset,ftmglm-method","text":"x Object class inheriting ftmglm ftmlm. subset character string variables indices use.","code":""},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/reference/subset-ftmglm-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract/Subset the variables used in a ftmglm or ftmlm object — subset,ftmglm-method","text":"ftmglm ftmlm object uses specified variables.","code":""},{"path":[]},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/news/index.html","id":"bug-fixes-and-minor-features-0-1-1","dir":"Changelog","previous_headings":"","what":"Bug Fixes and minor features","title":"Version 0.1.1 (2025-05-02)","text":"Fixed small bug limited glmnet models just cv.glmnet objects. Added ability explicitly label outcome name.","code":""},{"path":[]},{"path":"https://bakermetabolomics.github.io/FlexibleTransferModels/news/index.html","id":"initial-release-0-1-0","dir":"Changelog","previous_headings":"","what":"Initial Release","title":"Version 0.1.0 (2024-05-29)","text":"Introduced Flexible Transfer Models (FTM) package. Enabled adaptation glm, lm, glmnet models FTM framework. Implemented matrix-based approach re-estimating model parameters.","code":""}]
